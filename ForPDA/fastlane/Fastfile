default_platform(:ios)

platform :ios do

    desc "Update version and build number (e.g. add `version:1.2.3` after lane name)"

    lane :update do |options|
        # Setting build number to amount of all commits in repo
	build = sh("git rev-list --all --count").chomp.strip

        # Updating build number in all targets
        increment_build_number_in_xcodeproj(
            build_number: build,
            target: 'ForPDA'
        )
        increment_build_number_in_xcodeproj(
            build_number: build,
            target: 'ShareExtension'
        )
        increment_build_number_in_xcodeproj(
            build_number: build,
            target: 'OpenInAppExtension'
        )
        
        # If version is not specified when calling this lane then use current one instead
        version = options.fetch(:version, get_version_number_from_xcodeproj)
        increment_version_number_in_xcodeproj(
            version_number: version,
            target: 'ForPDA'
        )
        increment_version_number_in_xcodeproj(
            version_number: version,
            target: 'ShareExtension'
        )
        increment_version_number_in_xcodeproj(
            version_number: version,
            target: 'OpenInAppExtension'
        )

    end

    #----------------------------------------------------------------------------------

    desc "Push new build to TestFlight (has version option to update marketing version)"

    lane :beta do |options|

        # Setting build number to amount of all commits in repo
        build = sh("git rev-list --all --count").chomp.strip
        
        # Updating build number in all targets
        increment_build_number_in_xcodeproj(
            build_number: build,
            target: 'ForPDA'
        )
        increment_build_number_in_xcodeproj(
            build_number: build,
            target: 'ShareExtension'
        )
        increment_build_number_in_xcodeproj(
            build_number: build,
            target: 'OpenInAppExtension'
        )
        
        # If version is not specified when calling this lane then use current one instead
        version = options.fetch(:version, get_version_number_from_xcodeproj)
        increment_version_number_in_xcodeproj(
            version_number: version,
            target: 'ForPDA'
        )
        increment_version_number_in_xcodeproj(
            version_number: version,
            target: 'ShareExtension'
        )
        increment_version_number_in_xcodeproj(
            version_number: version,
            target: 'OpenInAppExtension'
        )

        build_app(
            scheme: "ForPDA",
            output_directory: "build/",
            cloned_source_packages_path: "SourcePackages",
	    silent: true,
	    suppress_xcode_output: true,
	    export_method: "app-store",
	    export_options: {
	    provisioningProfiles: { 
		"com.subvert.forpda" => "com.subvert.forpda AppStore",
		"com.subvert.forpda.OpenInAppExtension" => "com.subvert.forpda.OpenInAppExtension AppStore",
		"com.subvert.forpda.ShareExtension" => "com.subvert.forpda.ShareExtension AppStore"
      	        }
	    }
        )

        swift_file_path = "../../Sources/AnalyticsClient/Secrets.swift"
        swift_file_content = File.read(swift_file_path)
        sentry_dsym_token = swift_file_content[/let sentryDSYMToken = "(.*?)"/, 1]
        sentry_debug_files_upload(
            auth_token: sentry_dsym_token,
            org_slug: 'forpda',
            project_slug: 'apple-ios',
            include_sources: true
        )

        upload_to_testflight(
            api_key_path: "fastlane/Credentials.json"
        )

        notification(
            subtitle: "Uploading Finished!",
            message: "Build is on TestFlight",
            content_image: "images/logo.png"
        )

    end

    error do |lane, exception, options|
        notification(
            subtitle: "Error while executing #{lane}!",
            message: "#{exception}",
            content_image: "images/logo.png"
        )
    end

end
